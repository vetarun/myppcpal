@model Mpp.WEB.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_UserAccount.cshtml";
}
<div class="container">
    <div class="col-md-8 col-md-push-2">
        <div class="md-box">
            <h1>REGISTER</h1>
            @using (Html.BeginForm("Register", "UserAccount", routeValues: null, method: FormMethod.Post, htmlAttributes: new { id = "registerForm" }))
            {
                @*@Html.ValidationSummary()*@
                @*@Html.AntiForgeryToken()*@
                <div class="form-group">
                    @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @class = "form-control", placeholder = "First Name" })
                    @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(model => model.LasttName, htmlAttributes: new { @class = "form-control", placeholder = "Last Name" })
                    @Html.ValidationMessageFor(model => model.LasttName, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(model => model.Email, htmlAttributes: new { @class = "form-control", placeholder = "Email Address" })
                    @Html.ValidationMessageFor(model => model.Email, null, htmlAttributes: new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control", placeholder = "Password" })
                    @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control", placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-block btn-info">Create Account</button>
                </div>
                if (Convert.ToString(TempData["IsValid"]) != "")
                {
                    <div class="form-group resultmsg text-danger">
                        <span>@TempData["IsValid"]</span>
                        @if (Convert.ToBoolean(TempData["IsSuccess"]))
                        {
                            <br /><span>Please contact administrator if you haven't received any email. Thank you</span>
                        }
                    </div>
                }
                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
            }
        </div>
    </div>
</div>